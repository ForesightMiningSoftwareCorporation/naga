; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 185
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %109 "main" %128
OpExecutionMode %109 LocalSize 1 1 1
OpDecorate %5 ArrayStride 4
OpMemberDecorate %9 0 Offset 0
OpMemberDecorate %9 1 Offset 12
OpDecorate %11 ArrayStride 8
OpDecorate %13 ArrayStride 16
OpDecorate %17 ArrayStride 32
OpDecorate %19 ArrayStride 64
OpDecorate %21 ArrayStride 32
OpDecorate %22 ArrayStride 64
OpDecorate %39 DescriptorSet 0
OpDecorate %39 Binding 1
OpDecorate %40 Block
OpMemberDecorate %40 0 Offset 0
OpDecorate %42 NonWritable
OpDecorate %42 DescriptorSet 0
OpDecorate %42 Binding 2
OpDecorate %43 Block
OpMemberDecorate %43 0 Offset 0
OpDecorate %45 DescriptorSet 0
OpDecorate %45 Binding 3
OpDecorate %46 Block
OpMemberDecorate %46 0 Offset 0
OpDecorate %48 DescriptorSet 0
OpDecorate %48 Binding 4
OpDecorate %49 Block
OpMemberDecorate %49 0 Offset 0
OpDecorate %51 DescriptorSet 0
OpDecorate %51 Binding 5
OpDecorate %52 Block
OpMemberDecorate %52 0 Offset 0
OpMemberDecorate %52 0 ColMajor
OpMemberDecorate %52 0 MatrixStride 8
OpDecorate %54 DescriptorSet 0
OpDecorate %54 Binding 6
OpDecorate %55 Block
OpMemberDecorate %55 0 Offset 0
OpDecorate %57 DescriptorSet 0
OpDecorate %57 Binding 7
OpDecorate %58 Block
OpMemberDecorate %58 0 Offset 0
OpDecorate %128 BuiltIn LocalInvocationId
%2 = OpTypeVoid
%3 = OpTypeBool
%4 = OpTypeFloat 32
%7 = OpTypeInt 32 0
%6 = OpConstant  %7  10
%5 = OpTypeArray %4 %6
%8 = OpTypeVector %4 3
%9 = OpTypeStruct %8 %4
%10 = OpTypeVector %4 2
%11 = OpTypeRuntimeArray %10
%12 = OpTypeVector %4 4
%14 = OpConstant  %7  20
%13 = OpTypeArray %12 %14
%15 = OpTypeMatrix %10 3
%16 = OpTypeMatrix %12 2
%18 = OpConstant  %7  2
%17 = OpTypeArray %16 %18
%19 = OpTypeArray %17 %18
%20 = OpTypeMatrix %10 4
%21 = OpTypeArray %20 %18
%22 = OpTypeArray %21 %18
%23 = OpTypeInt 32 1
%24 = OpTypeMatrix %8 3
%25 = OpConstantTrue  %3
%26 = OpConstant  %23  0
%27 = OpConstant  %23  1
%28 = OpConstant  %23  2
%29 = OpConstant  %23  20
%30 = OpConstant  %23  3
%31 = OpConstant  %23  4
%32 = OpConstant  %23  5
%33 = OpConstant  %23  6
%34 = OpConstant  %23  7
%36 = OpTypePointer Workgroup %5
%35 = OpVariable  %36  Workgroup
%38 = OpTypePointer Workgroup %7
%37 = OpVariable  %38  Workgroup
%40 = OpTypeStruct %9
%41 = OpTypePointer StorageBuffer %40
%39 = OpVariable  %41  StorageBuffer
%43 = OpTypeStruct %11
%44 = OpTypePointer StorageBuffer %43
%42 = OpVariable  %44  StorageBuffer
%46 = OpTypeStruct %13
%47 = OpTypePointer Uniform %46
%45 = OpVariable  %47  Uniform
%49 = OpTypeStruct %8
%50 = OpTypePointer Uniform %49
%48 = OpVariable  %50  Uniform
%52 = OpTypeStruct %15
%53 = OpTypePointer Uniform %52
%51 = OpVariable  %53  Uniform
%55 = OpTypeStruct %19
%56 = OpTypePointer Uniform %55
%54 = OpVariable  %56  Uniform
%58 = OpTypeStruct %22
%59 = OpTypePointer Uniform %58
%57 = OpVariable  %59  Uniform
%63 = OpTypeFunction %2 %8
%66 = OpTypePointer Function %23
%67 = OpConstantNull  %23
%70 = OpTypeFunction %2
%71 = OpTypePointer StorageBuffer %9
%72 = OpConstant  %7  0
%74 = OpConstant  %4  1.0
%75 = OpConstant  %4  2.0
%76 = OpConstant  %4  3.0
%77 = OpConstantNull  %24
%78 = OpConstantNull  %24
%80 = OpTypePointer StorageBuffer %8
%83 = OpTypePointer StorageBuffer %4
%103 = OpTypePointer Function %4
%104 = OpConstantNull  %4
%106 = OpTypePointer Function %3
%107 = OpConstantNull  %3
%111 = OpTypePointer StorageBuffer %11
%113 = OpTypePointer Uniform %13
%115 = OpTypePointer Uniform %8
%117 = OpTypePointer Uniform %15
%119 = OpTypePointer Uniform %19
%121 = OpTypePointer Uniform %22
%123 = OpConstant  %4  4.0
%125 = OpConstantNull  %5
%126 = OpConstantNull  %7
%127 = OpTypeVector %7 3
%129 = OpTypePointer Input %127
%128 = OpVariable  %129  Input
%131 = OpConstantNull  %127
%132 = OpTypeVector %3 3
%137 = OpConstant  %7  264
%140 = OpTypePointer Workgroup %4
%141 = OpTypePointer Uniform %21
%142 = OpTypePointer Uniform %20
%145 = OpTypePointer Uniform %17
%146 = OpTypePointer Uniform %16
%147 = OpTypePointer Uniform %12
%152 = OpConstant  %7  7
%158 = OpConstant  %7  6
%160 = OpTypePointer StorageBuffer %10
%161 = OpConstant  %7  1
%164 = OpConstant  %7  5
%166 = OpTypePointer Uniform %12
%167 = OpTypePointer Uniform %4
%168 = OpConstant  %7  3
%171 = OpConstant  %7  4
%173 = OpTypePointer StorageBuffer %4
%184 = OpConstant  %7  256
%62 = OpFunction  %2  None %63
%61 = OpFunctionParameter  %8
%60 = OpLabel
OpBranch %64
%64 = OpLabel
OpReturn
OpFunctionEnd
%69 = OpFunction  %2  None %70
%68 = OpLabel
%65 = OpVariable  %66  Function %67
%73 = OpAccessChain  %71  %39 %72
OpBranch %79
%79 = OpLabel
%81 = OpCompositeConstruct  %8  %74 %74 %74
%82 = OpAccessChain  %80  %73 %72
OpStore %82 %81
OpStore %65 %27
%84 = OpAccessChain  %83  %73 %72 %72
OpStore %84 %74
%85 = OpAccessChain  %83  %73 %72 %72
OpStore %85 %75
%86 = OpLoad  %23  %65
%87 = OpAccessChain  %83  %73 %72 %86
OpStore %87 %76
%88 = OpLoad  %9  %73
%89 = OpCompositeExtract  %8  %88 0
%90 = OpCompositeExtract  %8  %88 0
%91 = OpVectorShuffle  %10  %90 %90 2 0
%92 = OpCompositeExtract  %8  %88 0
%93 = OpFunctionCall  %2  %62 %92
%94 = OpCompositeExtract  %8  %88 0
%95 = OpVectorTimesMatrix  %8  %94 %77
%96 = OpCompositeExtract  %8  %88 0
%97 = OpMatrixTimesVector  %8  %78 %96
%98 = OpCompositeExtract  %8  %88 0
%99 = OpVectorTimesScalar  %8  %98 %75
%100 = OpCompositeExtract  %8  %88 0
%101 = OpVectorTimesScalar  %8  %100 %75
OpReturn
OpFunctionEnd
%109 = OpFunction  %2  None %70
%108 = OpLabel
%102 = OpVariable  %103  Function %104
%105 = OpVariable  %106  Function %107
%110 = OpAccessChain  %71  %39 %72
%112 = OpAccessChain  %111  %42 %72
%114 = OpAccessChain  %113  %45 %72
%116 = OpAccessChain  %115  %48 %72
%118 = OpAccessChain  %117  %51 %72
%120 = OpAccessChain  %119  %54 %72
%122 = OpAccessChain  %121  %57 %72
OpBranch %124
%124 = OpLabel
%130 = OpLoad  %127  %128
%133 = OpIEqual  %132  %130 %131
%134 = OpAll  %3  %133
OpSelectionMerge %135 None
OpBranchConditional %134 %136 %135
%136 = OpLabel
OpStore %35 %125
OpStore %37 %126
OpBranch %135
%135 = OpLabel
OpControlBarrier %18 %18 %137
OpBranch %138
%138 = OpLabel
%139 = OpFunctionCall  %2  %69
%143 = OpAccessChain  %142  %122 %72 %72
%144 = OpLoad  %20  %143
%148 = OpAccessChain  %147  %120 %72 %72 %72
%149 = OpLoad  %12  %148
%150 = OpMatrixTimesVector  %10  %144 %149
%151 = OpCompositeExtract  %4  %150 0
%153 = OpAccessChain  %140  %35 %152
OpStore %153 %151
%154 = OpLoad  %15  %118
%155 = OpLoad  %8  %116
%156 = OpMatrixTimesVector  %10  %154 %155
%157 = OpCompositeExtract  %4  %156 0
%159 = OpAccessChain  %140  %35 %158
OpStore %159 %157
%162 = OpAccessChain  %83  %112 %161 %161
%163 = OpLoad  %4  %162
%165 = OpAccessChain  %140  %35 %164
OpStore %165 %163
%169 = OpAccessChain  %167  %114 %72 %168
%170 = OpLoad  %4  %169
%172 = OpAccessChain  %140  %35 %171
OpStore %172 %170
%174 = OpAccessChain  %173  %110 %161
%175 = OpLoad  %4  %174
%176 = OpAccessChain  %140  %35 %168
OpStore %176 %175
%177 = OpAccessChain  %83  %110 %72 %72
%178 = OpLoad  %4  %177
%179 = OpAccessChain  %140  %35 %18
OpStore %179 %178
%180 = OpAccessChain  %173  %110 %161
OpStore %180 %123
%181 = OpArrayLength  %7  %42 0
%182 = OpConvertUToF  %4  %181
%183 = OpAccessChain  %140  %35 %161
OpStore %183 %182
OpAtomicStore %37 %28 %184 %18
OpStore %102 %74
OpStore %105 %25
OpReturn
OpFunctionEnd