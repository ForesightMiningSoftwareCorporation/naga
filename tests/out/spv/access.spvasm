; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 327
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %241 "foo_vert" %236 %239
OpEntryPoint Fragment %287 "foo_frag" %286
OpEntryPoint GLCompute %307 "assign_through_ptr" %310
OpExecutionMode %287 OriginUpperLeft
OpExecutionMode %307 LocalSize 1 1 1
OpMemberName %6 0 "a"
OpMemberName %6 1 "b"
OpMemberName %6 2 "c"
OpName %6 "GlobalConst"
OpMemberName %7 0 "value"
OpName %7 "AlignedWrapper"
OpMemberName %20 0 "_matrix"
OpMemberName %20 1 "matrix_array"
OpMemberName %20 2 "atom"
OpMemberName %20 3 "atom_arr"
OpMemberName %20 4 "arr"
OpMemberName %20 5 "data"
OpName %20 "Bar"
OpMemberName %22 0 "m"
OpName %22 "Baz"
OpMemberName %26 0 "am"
OpName %26 "MatCx2InArray"
OpName %48 "global_const"
OpName %50 "bar"
OpName %52 "baz"
OpName %55 "qux"
OpName %58 "nested_mat_cx2"
OpName %61 "val"
OpName %62 "idx"
OpName %65 "t"
OpName %69 "test_matrix_within_struct_accesses"
OpName %139 "idx"
OpName %141 "t"
OpName %145 "test_matrix_within_array_within_struct_accesses"
OpName %204 "foo"
OpName %205 "read_from_private"
OpName %210 "a"
OpName %211 "test_arr_as_arg"
OpName %217 "p"
OpName %218 "assign_through_ptr_fn"
OpName %223 "foo"
OpName %224 "assign_array_through_ptr_fn"
OpName %230 "foo"
OpName %232 "c2"
OpName %236 "vi"
OpName %241 "foo_vert"
OpName %287 "foo_frag"
OpName %304 "arr"
OpName %307 "assign_through_ptr"
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 16
OpMemberDecorate %6 2 Offset 28
OpMemberDecorate %7 0 Offset 0
OpDecorate %13 ArrayStride 16
OpDecorate %15 ArrayStride 4
OpDecorate %18 ArrayStride 8
OpDecorate %19 ArrayStride 8
OpMemberDecorate %20 0 Offset 0
OpMemberDecorate %20 0 ColMajor
OpMemberDecorate %20 0 MatrixStride 16
OpMemberDecorate %20 1 Offset 64
OpMemberDecorate %20 1 ColMajor
OpMemberDecorate %20 1 MatrixStride 8
OpMemberDecorate %20 2 Offset 96
OpMemberDecorate %20 3 Offset 100
OpMemberDecorate %20 4 Offset 144
OpMemberDecorate %20 5 Offset 160
OpMemberDecorate %22 0 Offset 0
OpMemberDecorate %22 0 ColMajor
OpMemberDecorate %22 0 MatrixStride 8
OpDecorate %25 ArrayStride 32
OpMemberDecorate %26 0 Offset 0
OpMemberDecorate %26 0 ColMajor
OpMemberDecorate %26 0 MatrixStride 8
OpDecorate %28 ArrayStride 4
OpDecorate %29 ArrayStride 40
OpDecorate %33 ArrayStride 4
OpDecorate %36 ArrayStride 16
OpDecorate %50 DescriptorSet 0
OpDecorate %50 Binding 0
OpDecorate %20 Block
OpDecorate %52 DescriptorSet 0
OpDecorate %52 Binding 1
OpDecorate %53 Block
OpMemberDecorate %53 0 Offset 0
OpDecorate %55 DescriptorSet 0
OpDecorate %55 Binding 2
OpDecorate %56 Block
OpMemberDecorate %56 0 Offset 0
OpDecorate %58 DescriptorSet 0
OpDecorate %58 Binding 3
OpDecorate %59 Block
OpMemberDecorate %59 0 Offset 0
OpDecorate %236 BuiltIn VertexIndex
OpDecorate %239 BuiltIn Position
OpDecorate %286 Location 0
OpDecorate %310 BuiltIn LocalInvocationId
%2 = OpTypeVoid
%3 = OpTypeInt 32 0
%4 = OpTypeVector %3 3
%5 = OpTypeInt 32 1
%6 = OpTypeStruct %3 %4 %5
%7 = OpTypeStruct %5
%10 = OpTypeFloat 32
%9 = OpTypeVector %10 3
%8 = OpTypeMatrix %9 4
%12 = OpTypeVector %10 2
%11 = OpTypeMatrix %12 2
%14 = OpConstant  %3  2
%13 = OpTypeArray %11 %14
%16 = OpConstant  %3  10
%15 = OpTypeArray %5 %16
%17 = OpTypeVector %3 2
%18 = OpTypeArray %17 %14
%19 = OpTypeRuntimeArray %7
%20 = OpTypeStruct %8 %13 %5 %15 %18 %19
%21 = OpTypeMatrix %12 3
%22 = OpTypeStruct %21
%23 = OpTypeVector %5 2
%24 = OpTypeMatrix %12 4
%25 = OpTypeArray %24 %14
%26 = OpTypeStruct %25
%27 = OpTypePointer Function %10
%28 = OpTypeArray %10 %16
%30 = OpConstant  %3  5
%29 = OpTypeArray %28 %30
%31 = OpTypeVector %10 4
%32 = OpTypePointer StorageBuffer %5
%33 = OpTypeArray %5 %30
%34 = OpTypeVector %5 4
%35 = OpTypePointer Workgroup %3
%36 = OpTypeArray %31 %14
%37 = OpTypePointer Function %36
%38 = OpConstant  %3  0
%39 = OpConstantComposite  %4  %38 %38 %38
%40 = OpConstant  %5  0
%41 = OpConstantComposite  %6  %38 %39 %40
%42 = OpConstant  %5  8
%43 = OpConstant  %5  2
%44 = OpConstant  %5  10
%45 = OpConstant  %5  1
%46 = OpConstant  %5  3
%47 = OpConstant  %5  5
%49 = OpTypePointer Private %6
%48 = OpVariable  %49  Private %41
%51 = OpTypePointer StorageBuffer %20
%50 = OpVariable  %51  StorageBuffer
%53 = OpTypeStruct %22
%54 = OpTypePointer Uniform %53
%52 = OpVariable  %54  Uniform
%56 = OpTypeStruct %23
%57 = OpTypePointer StorageBuffer %56
%55 = OpVariable  %57  StorageBuffer
%59 = OpTypeStruct %26
%60 = OpTypePointer Uniform %59
%58 = OpVariable  %60  Uniform
%61 = OpVariable  %35  Workgroup
%63 = OpTypePointer Function %5
%64 = OpConstantNull  %5
%66 = OpTypePointer Function %22
%67 = OpConstantNull  %22
%70 = OpTypeFunction %2
%71 = OpTypePointer Uniform %22
%73 = OpConstant  %10  1.0
%74 = OpConstant  %10  2.0
%75 = OpConstant  %10  3.0
%76 = OpConstant  %10  6.0
%77 = OpConstant  %10  5.0
%78 = OpConstant  %10  4.0
%79 = OpConstant  %10  9.0
%80 = OpConstant  %10  90.0
%81 = OpConstant  %10  10.0
%82 = OpConstant  %10  20.0
%83 = OpConstant  %10  30.0
%84 = OpConstant  %10  40.0
%88 = OpTypePointer Uniform %21
%91 = OpTypePointer Uniform %12
%97 = OpTypePointer Uniform %10
%98 = OpConstant  %3  1
%118 = OpTypePointer Function %21
%124 = OpTypePointer Function %12
%130 = OpTypePointer Function %10
%140 = OpConstantNull  %5
%142 = OpTypePointer Function %26
%143 = OpConstantNull  %26
%146 = OpTypePointer Uniform %26
%148 = OpConstantNull  %25
%149 = OpConstantNull  %25
%150 = OpConstant  %10  8.0
%151 = OpConstant  %10  7.0
%155 = OpTypePointer Uniform %25
%158 = OpTypePointer Uniform %24
%181 = OpTypePointer Function %25
%183 = OpTypePointer Function %24
%206 = OpTypeFunction %10 %27
%212 = OpTypeFunction %10 %29
%219 = OpTypeFunction %2 %35
%220 = OpConstant  %3  42
%225 = OpTypeFunction %2 %37
%231 = OpConstantNull  %10
%233 = OpTypePointer Function %33
%234 = OpConstantNull  %33
%237 = OpTypePointer Input %3
%236 = OpVariable  %237  Input
%240 = OpTypePointer Output %31
%239 = OpVariable  %240  Output
%243 = OpTypePointer StorageBuffer %23
%246 = OpConstant  %10  0.0
%247 = OpConstant  %3  3
%248 = OpConstant  %5  4
%249 = OpConstant  %5  42
%250 = OpConstantNull  %29
%255 = OpTypePointer StorageBuffer %8
%258 = OpTypePointer StorageBuffer %18
%259 = OpConstant  %3  4
%262 = OpTypePointer StorageBuffer %9
%263 = OpTypePointer StorageBuffer %10
%266 = OpTypePointer StorageBuffer %19
%269 = OpTypePointer StorageBuffer %7
%286 = OpVariable  %240  Output
%289 = OpConstantNull  %23
%305 = OpConstantNull  %36
%309 = OpConstantNull  %3
%311 = OpTypePointer Input %4
%310 = OpVariable  %311  Input
%313 = OpConstantNull  %4
%315 = OpTypeBool
%314 = OpTypeVector %315 3
%320 = OpConstant  %3  264
%69 = OpFunction  %2  None %70
%68 = OpLabel
%62 = OpVariable  %63  Function %64
%65 = OpVariable  %66  Function %67
%72 = OpAccessChain  %71  %52 %38
OpBranch %85
%85 = OpLabel
OpStore %62 %45
%86 = OpLoad  %5  %62
%87 = OpISub  %5  %86 %45
OpStore %62 %87
%89 = OpAccessChain  %88  %72 %38
%90 = OpLoad  %21  %89
%92 = OpAccessChain  %91  %72 %38 %38
%93 = OpLoad  %12  %92
%94 = OpLoad  %5  %62
%95 = OpAccessChain  %91  %72 %38 %94
%96 = OpLoad  %12  %95
%99 = OpAccessChain  %97  %72 %38 %38 %98
%100 = OpLoad  %10  %99
%101 = OpLoad  %5  %62
%102 = OpAccessChain  %97  %72 %38 %38 %101
%103 = OpLoad  %10  %102
%104 = OpLoad  %5  %62
%105 = OpAccessChain  %97  %72 %38 %104 %98
%106 = OpLoad  %10  %105
%107 = OpLoad  %5  %62
%108 = OpLoad  %5  %62
%109 = OpAccessChain  %97  %72 %38 %107 %108
%110 = OpLoad  %10  %109
%111 = OpCompositeConstruct  %12  %73 %73
%112 = OpCompositeConstruct  %12  %74 %74
%113 = OpCompositeConstruct  %12  %75 %75
%114 = OpCompositeConstruct  %21  %111 %112 %113
%115 = OpCompositeConstruct  %22  %114
OpStore %65 %115
%116 = OpLoad  %5  %62
%117 = OpIAdd  %5  %116 %45
OpStore %62 %117
%119 = OpCompositeConstruct  %12  %76 %76
%120 = OpCompositeConstruct  %12  %77 %77
%121 = OpCompositeConstruct  %12  %78 %78
%122 = OpCompositeConstruct  %21  %119 %120 %121
%123 = OpAccessChain  %118  %65 %38
OpStore %123 %122
%125 = OpCompositeConstruct  %12  %79 %79
%126 = OpAccessChain  %124  %65 %38 %38
OpStore %126 %125
%127 = OpLoad  %5  %62
%128 = OpCompositeConstruct  %12  %80 %80
%129 = OpAccessChain  %124  %65 %38 %127
OpStore %129 %128
%131 = OpAccessChain  %130  %65 %38 %38 %98
OpStore %131 %81
%132 = OpLoad  %5  %62
%133 = OpAccessChain  %130  %65 %38 %38 %132
OpStore %133 %82
%134 = OpLoad  %5  %62
%135 = OpAccessChain  %130  %65 %38 %134 %98
OpStore %135 %83
%136 = OpLoad  %5  %62
%137 = OpLoad  %5  %62
%138 = OpAccessChain  %130  %65 %38 %136 %137
OpStore %138 %84
OpReturn
OpFunctionEnd
%145 = OpFunction  %2  None %70
%144 = OpLabel
%139 = OpVariable  %63  Function %140
%141 = OpVariable  %142  Function %143
%147 = OpAccessChain  %146  %58 %38
OpBranch %152
%152 = OpLabel
OpStore %139 %45
%153 = OpLoad  %5  %139
%154 = OpISub  %5  %153 %45
OpStore %139 %154
%156 = OpAccessChain  %155  %147 %38
%157 = OpLoad  %25  %156
%159 = OpAccessChain  %158  %147 %38 %38
%160 = OpLoad  %24  %159
%161 = OpAccessChain  %91  %147 %38 %38 %38
%162 = OpLoad  %12  %161
%163 = OpLoad  %5  %139
%164 = OpAccessChain  %91  %147 %38 %38 %163
%165 = OpLoad  %12  %164
%166 = OpAccessChain  %97  %147 %38 %38 %38 %98
%167 = OpLoad  %10  %166
%168 = OpLoad  %5  %139
%169 = OpAccessChain  %97  %147 %38 %38 %38 %168
%170 = OpLoad  %10  %169
%171 = OpLoad  %5  %139
%172 = OpAccessChain  %97  %147 %38 %38 %171 %98
%173 = OpLoad  %10  %172
%174 = OpLoad  %5  %139
%175 = OpLoad  %5  %139
%176 = OpAccessChain  %97  %147 %38 %38 %174 %175
%177 = OpLoad  %10  %176
%178 = OpCompositeConstruct  %26  %148
OpStore %141 %178
%179 = OpLoad  %5  %139
%180 = OpIAdd  %5  %179 %45
OpStore %139 %180
%182 = OpAccessChain  %181  %141 %38
OpStore %182 %149
%184 = OpCompositeConstruct  %12  %150 %150
%185 = OpCompositeConstruct  %12  %151 %151
%186 = OpCompositeConstruct  %12  %76 %76
%187 = OpCompositeConstruct  %12  %77 %77
%188 = OpCompositeConstruct  %24  %184 %185 %186 %187
%189 = OpAccessChain  %183  %141 %38 %38
OpStore %189 %188
%190 = OpCompositeConstruct  %12  %79 %79
%191 = OpAccessChain  %124  %141 %38 %38 %38
OpStore %191 %190
%192 = OpLoad  %5  %139
%193 = OpCompositeConstruct  %12  %80 %80
%194 = OpAccessChain  %124  %141 %38 %38 %192
OpStore %194 %193
%195 = OpAccessChain  %130  %141 %38 %38 %38 %98
OpStore %195 %81
%196 = OpLoad  %5  %139
%197 = OpAccessChain  %130  %141 %38 %38 %38 %196
OpStore %197 %82
%198 = OpLoad  %5  %139
%199 = OpAccessChain  %130  %141 %38 %38 %198 %98
OpStore %199 %83
%200 = OpLoad  %5  %139
%201 = OpLoad  %5  %139
%202 = OpAccessChain  %130  %141 %38 %38 %200 %201
OpStore %202 %84
OpReturn
OpFunctionEnd
%205 = OpFunction  %10  None %206
%204 = OpFunctionParameter  %27
%203 = OpLabel
OpBranch %207
%207 = OpLabel
%208 = OpLoad  %10  %204
OpReturnValue %208
OpFunctionEnd
%211 = OpFunction  %10  None %212
%210 = OpFunctionParameter  %29
%209 = OpLabel
OpBranch %213
%213 = OpLabel
%214 = OpCompositeExtract  %28  %210 4
%215 = OpCompositeExtract  %10  %214 9
OpReturnValue %215
OpFunctionEnd
%218 = OpFunction  %2  None %219
%217 = OpFunctionParameter  %35
%216 = OpLabel
OpBranch %221
%221 = OpLabel
OpStore %217 %220
OpReturn
OpFunctionEnd
%224 = OpFunction  %2  None %225
%223 = OpFunctionParameter  %37
%222 = OpLabel
OpBranch %226
%226 = OpLabel
%227 = OpCompositeConstruct  %31  %73 %73 %73 %73
%228 = OpCompositeConstruct  %31  %74 %74 %74 %74
%229 = OpCompositeConstruct  %36  %227 %228
OpStore %223 %229
OpReturn
OpFunctionEnd
%241 = OpFunction  %2  None %70
%235 = OpLabel
%230 = OpVariable  %27  Function %231
%232 = OpVariable  %233  Function %234
%238 = OpLoad  %3  %236
%242 = OpAccessChain  %71  %52 %38
%244 = OpAccessChain  %243  %55 %38
%245 = OpAccessChain  %146  %58 %38
OpBranch %251
%251 = OpLabel
OpStore %230 %246
%252 = OpLoad  %10  %230
OpStore %230 %73
%253 = OpFunctionCall  %2  %69
%254 = OpFunctionCall  %2  %145
%256 = OpAccessChain  %255  %50 %38
%257 = OpLoad  %8  %256
%260 = OpAccessChain  %258  %50 %259
%261 = OpLoad  %18  %260
%264 = OpAccessChain  %263  %50 %38 %247 %38
%265 = OpLoad  %10  %264
%267 = OpArrayLength  %3  %50 5
%268 = OpISub  %3  %267 %14
%270 = OpAccessChain  %32  %50 %30 %268 %38
%271 = OpLoad  %5  %270
%272 = OpLoad  %23  %244
%273 = OpFunctionCall  %10  %205 %230
%274 = OpConvertFToS  %5  %265
%275 = OpCompositeConstruct  %33  %271 %274 %46 %248 %47
OpStore %232 %275
%276 = OpIAdd  %3  %238 %98
%277 = OpAccessChain  %63  %232 %276
OpStore %277 %249
%278 = OpAccessChain  %63  %232 %238
%279 = OpLoad  %5  %278
%280 = OpFunctionCall  %10  %211 %250
%281 = OpCompositeConstruct  %34  %279 %279 %279 %279
%282 = OpConvertSToF  %31  %281
%283 = OpMatrixTimesVector  %9  %257 %282
%284 = OpCompositeConstruct  %31  %283 %74
OpStore %239 %284
OpReturn
OpFunctionEnd
%287 = OpFunction  %2  None %70
%285 = OpLabel
%288 = OpAccessChain  %243  %55 %38
OpBranch %290
%290 = OpLabel
%291 = OpAccessChain  %263  %50 %38 %98 %14
OpStore %291 %73
%292 = OpCompositeConstruct  %9  %246 %246 %246
%293 = OpCompositeConstruct  %9  %73 %73 %73
%294 = OpCompositeConstruct  %9  %74 %74 %74
%295 = OpCompositeConstruct  %9  %75 %75 %75
%296 = OpCompositeConstruct  %8  %292 %293 %294 %295
%297 = OpAccessChain  %255  %50 %38
OpStore %297 %296
%298 = OpCompositeConstruct  %17  %38 %38
%299 = OpCompositeConstruct  %17  %98 %98
%300 = OpCompositeConstruct  %18  %298 %299
%301 = OpAccessChain  %258  %50 %259
OpStore %301 %300
%302 = OpAccessChain  %32  %50 %30 %98 %38
OpStore %302 %45
OpStore %288 %289
%303 = OpCompositeConstruct  %31  %246 %246 %246 %246
OpStore %286 %303
OpReturn
OpFunctionEnd
%307 = OpFunction  %2  None %70
%306 = OpLabel
%304 = OpVariable  %37  Function %305
OpBranch %308
%308 = OpLabel
%312 = OpLoad  %4  %310
%316 = OpIEqual  %314  %312 %313
%317 = OpAll  %315  %316
OpSelectionMerge %318 None
OpBranchConditional %317 %319 %318
%319 = OpLabel
OpStore %61 %309
OpBranch %318
%318 = OpLabel
OpControlBarrier %14 %14 %320
OpBranch %321
%321 = OpLabel
%322 = OpCompositeConstruct  %31  %76 %76 %76 %76
%323 = OpCompositeConstruct  %31  %151 %151 %151 %151
%324 = OpCompositeConstruct  %36  %322 %323
OpStore %304 %324
%325 = OpFunctionCall  %2  %218 %61
%326 = OpFunctionCall  %2  %224 %304
OpReturn
OpFunctionEnd