; SPIR-V
; Version: 1.1
; Generator: rspirv
; Bound: 317
OpCapability Shader
OpExtension "SPV_KHR_storage_buffer_storage_class"
%1 = OpExtInstImport "GLSL.std.450"
OpMemoryModel Logical GLSL450
OpEntryPoint Vertex %228 "foo_vert" %223 %226
OpEntryPoint Fragment %278 "foo_frag" %277
OpEntryPoint GLCompute %296 "assign_through_ptr" %303
OpExecutionMode %278 OriginUpperLeft
OpExecutionMode %296 LocalSize 1 1 1
OpMemberName %6 0 "a"
OpMemberName %6 1 "b"
OpMemberName %6 2 "c"
OpName %6 "GlobalConst"
OpMemberName %7 0 "value"
OpName %7 "AlignedWrapper"
OpMemberName %20 0 "_matrix"
OpMemberName %20 1 "matrix_array"
OpMemberName %20 2 "atom"
OpMemberName %20 3 "atom_arr"
OpMemberName %20 4 "arr"
OpMemberName %20 5 "data"
OpName %20 "Bar"
OpMemberName %22 0 "m"
OpName %22 "Baz"
OpMemberName %26 0 "am"
OpName %26 "MatCx2InArray"
OpName %48 "global_const"
OpName %50 "bar"
OpName %52 "baz"
OpName %55 "qux"
OpName %58 "nested_mat_cx2"
OpName %61 "val"
OpName %63 "test_matrix_within_struct_accesses"
OpName %90 "idx"
OpName %92 "t"
OpName %138 "test_matrix_within_array_within_struct_accesses"
OpName %149 "idx"
OpName %150 "t"
OpName %196 "foo"
OpName %197 "read_from_private"
OpName %202 "a"
OpName %203 "test_arr_as_arg"
OpName %209 "p"
OpName %210 "assign_through_ptr_fn"
OpName %215 "foo"
OpName %216 "assign_array_through_ptr_fn"
OpName %223 "vi"
OpName %228 "foo_vert"
OpName %238 "foo"
OpName %239 "c2"
OpName %278 "foo_frag"
OpName %296 "assign_through_ptr"
OpName %300 "arr"
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 16
OpMemberDecorate %6 2 Offset 28
OpMemberDecorate %7 0 Offset 0
OpDecorate %13 ArrayStride 16
OpDecorate %15 ArrayStride 4
OpDecorate %18 ArrayStride 8
OpDecorate %19 ArrayStride 8
OpMemberDecorate %20 0 Offset 0
OpMemberDecorate %20 0 ColMajor
OpMemberDecorate %20 0 MatrixStride 16
OpMemberDecorate %20 1 Offset 64
OpMemberDecorate %20 1 ColMajor
OpMemberDecorate %20 1 MatrixStride 8
OpMemberDecorate %20 2 Offset 96
OpMemberDecorate %20 3 Offset 100
OpMemberDecorate %20 4 Offset 144
OpMemberDecorate %20 5 Offset 160
OpMemberDecorate %22 0 Offset 0
OpMemberDecorate %22 0 ColMajor
OpMemberDecorate %22 0 MatrixStride 8
OpDecorate %25 ArrayStride 32
OpMemberDecorate %26 0 Offset 0
OpMemberDecorate %26 0 ColMajor
OpMemberDecorate %26 0 MatrixStride 8
OpDecorate %28 ArrayStride 4
OpDecorate %29 ArrayStride 40
OpDecorate %33 ArrayStride 4
OpDecorate %36 ArrayStride 16
OpDecorate %50 DescriptorSet 0
OpDecorate %50 Binding 0
OpDecorate %20 Block
OpDecorate %52 DescriptorSet 0
OpDecorate %52 Binding 1
OpDecorate %53 Block
OpMemberDecorate %53 0 Offset 0
OpDecorate %55 DescriptorSet 0
OpDecorate %55 Binding 2
OpDecorate %56 Block
OpMemberDecorate %56 0 Offset 0
OpDecorate %58 DescriptorSet 0
OpDecorate %58 Binding 3
OpDecorate %59 Block
OpMemberDecorate %59 0 Offset 0
OpDecorate %223 BuiltIn VertexIndex
OpDecorate %226 BuiltIn Position
OpDecorate %277 Location 0
OpDecorate %303 BuiltIn LocalInvocationId
%2 = OpTypeVoid
%3 = OpTypeInt 32 0
%4 = OpTypeVector %3 3
%5 = OpTypeInt 32 1
%6 = OpTypeStruct %3 %4 %5
%7 = OpTypeStruct %5
%10 = OpTypeFloat 32
%9 = OpTypeVector %10 3
%8 = OpTypeMatrix %9 4
%12 = OpTypeVector %10 2
%11 = OpTypeMatrix %12 2
%14 = OpConstant  %3  2
%13 = OpTypeArray %11 %14
%16 = OpConstant  %3  10
%15 = OpTypeArray %5 %16
%17 = OpTypeVector %3 2
%18 = OpTypeArray %17 %14
%19 = OpTypeRuntimeArray %7
%20 = OpTypeStruct %8 %13 %5 %15 %18 %19
%21 = OpTypeMatrix %12 3
%22 = OpTypeStruct %21
%23 = OpTypeVector %5 2
%24 = OpTypeMatrix %12 4
%25 = OpTypeArray %24 %14
%26 = OpTypeStruct %25
%27 = OpTypePointer Function %10
%28 = OpTypeArray %10 %16
%30 = OpConstant  %3  5
%29 = OpTypeArray %28 %30
%31 = OpTypeVector %10 4
%32 = OpTypePointer StorageBuffer %5
%33 = OpTypeArray %5 %30
%34 = OpTypeVector %5 4
%35 = OpTypePointer Workgroup %3
%36 = OpTypeArray %31 %14
%37 = OpTypePointer Function %36
%38 = OpConstant  %3  0
%39 = OpConstantComposite  %4  %38 %38 %38
%40 = OpConstant  %5  0
%41 = OpConstantComposite  %6  %38 %39 %40
%42 = OpConstant  %5  8
%43 = OpConstant  %5  2
%44 = OpConstant  %5  10
%45 = OpConstant  %5  1
%46 = OpConstant  %5  3
%47 = OpConstant  %5  5
%49 = OpTypePointer Private %6
%48 = OpVariable  %49  Private %41
%51 = OpTypePointer StorageBuffer %20
%50 = OpVariable  %51  StorageBuffer
%53 = OpTypeStruct %22
%54 = OpTypePointer Uniform %53
%52 = OpVariable  %54  Uniform
%56 = OpTypeStruct %23
%57 = OpTypePointer StorageBuffer %56
%55 = OpVariable  %57  StorageBuffer
%59 = OpTypeStruct %26
%60 = OpTypePointer Uniform %59
%58 = OpVariable  %60  Uniform
%61 = OpVariable  %35  Workgroup
%64 = OpTypeFunction %2
%65 = OpTypePointer Uniform %22
%67 = OpConstant  %10  1.0
%68 = OpConstantComposite  %12  %67 %67
%69 = OpConstant  %10  2.0
%70 = OpConstantComposite  %12  %69 %69
%71 = OpConstant  %10  3.0
%72 = OpConstantComposite  %12  %71 %71
%73 = OpConstantComposite  %21  %68 %70 %72
%74 = OpConstantComposite  %22  %73
%75 = OpConstant  %10  6.0
%76 = OpConstantComposite  %12  %75 %75
%77 = OpConstant  %10  5.0
%78 = OpConstantComposite  %12  %77 %77
%79 = OpConstant  %10  4.0
%80 = OpConstantComposite  %12  %79 %79
%81 = OpConstantComposite  %21  %76 %78 %80
%82 = OpConstant  %10  9.0
%83 = OpConstantComposite  %12  %82 %82
%84 = OpConstant  %10  90.0
%85 = OpConstantComposite  %12  %84 %84
%86 = OpConstant  %10  10.0
%87 = OpConstant  %10  20.0
%88 = OpConstant  %10  30.0
%89 = OpConstant  %10  40.0
%91 = OpTypePointer Function %5
%93 = OpTypePointer Function %22
%97 = OpTypePointer Uniform %21
%100 = OpTypePointer Uniform %12
%106 = OpTypePointer Uniform %10
%107 = OpConstant  %3  1
%122 = OpTypePointer Function %21
%124 = OpTypePointer Function %12
%128 = OpTypePointer Function %10
%139 = OpTypePointer Uniform %26
%141 = OpConstantNull  %25
%142 = OpConstantComposite  %26  %141
%143 = OpConstantNull  %25
%144 = OpConstant  %10  8.0
%145 = OpConstantComposite  %12  %144 %144
%146 = OpConstant  %10  7.0
%147 = OpConstantComposite  %12  %146 %146
%148 = OpConstantComposite  %24  %145 %147 %76 %78
%151 = OpTypePointer Function %26
%155 = OpTypePointer Uniform %25
%158 = OpTypePointer Uniform %24
%180 = OpTypePointer Function %25
%182 = OpTypePointer Function %24
%198 = OpTypeFunction %10 %27
%204 = OpTypeFunction %10 %29
%211 = OpTypeFunction %2 %35
%212 = OpConstant  %3  42
%217 = OpTypeFunction %2 %37
%218 = OpConstantComposite  %31  %67 %67 %67 %67
%219 = OpConstantComposite  %31  %69 %69 %69 %69
%220 = OpConstantComposite  %36  %218 %219
%224 = OpTypePointer Input %3
%223 = OpVariable  %224  Input
%227 = OpTypePointer Output %31
%226 = OpVariable  %227  Output
%230 = OpTypePointer StorageBuffer %23
%233 = OpConstant  %10  0.0
%234 = OpConstant  %3  3
%235 = OpConstant  %5  4
%236 = OpConstant  %5  42
%237 = OpConstantNull  %29
%240 = OpTypePointer Function %33
%241 = OpConstantNull  %33
%246 = OpTypePointer StorageBuffer %8
%249 = OpTypePointer StorageBuffer %18
%250 = OpConstant  %3  4
%253 = OpTypePointer StorageBuffer %9
%254 = OpTypePointer StorageBuffer %10
%257 = OpTypePointer StorageBuffer %19
%260 = OpTypePointer StorageBuffer %7
%277 = OpVariable  %227  Output
%280 = OpConstantComposite  %9  %233 %233 %233
%281 = OpConstantComposite  %9  %67 %67 %67
%282 = OpConstantComposite  %9  %69 %69 %69
%283 = OpConstantComposite  %9  %71 %71 %71
%284 = OpConstantComposite  %8  %280 %281 %282 %283
%285 = OpConstantComposite  %17  %38 %38
%286 = OpConstantComposite  %17  %107 %107
%287 = OpConstantComposite  %18  %285 %286
%288 = OpConstantNull  %23
%289 = OpConstantComposite  %31  %233 %233 %233 %233
%297 = OpConstantComposite  %31  %75 %75 %75 %75
%298 = OpConstantComposite  %31  %146 %146 %146 %146
%299 = OpConstantComposite  %36  %297 %298
%302 = OpConstantNull  %3
%304 = OpTypePointer Input %4
%303 = OpVariable  %304  Input
%306 = OpConstantNull  %4
%308 = OpTypeBool
%307 = OpTypeVector %308 3
%313 = OpConstant  %3  264
%63 = OpFunction  %2  None %64
%62 = OpLabel
%90 = OpVariable  %91  Function %45
%92 = OpVariable  %93  Function %74
%66 = OpAccessChain  %65  %52 %38
OpBranch %94
%94 = OpLabel
%95 = OpLoad  %5  %90
%96 = OpISub  %5  %95 %45
OpStore %90 %96
%98 = OpAccessChain  %97  %66 %38
%99 = OpLoad  %21  %98
%101 = OpAccessChain  %100  %66 %38 %38
%102 = OpLoad  %12  %101
%103 = OpLoad  %5  %90
%104 = OpAccessChain  %100  %66 %38 %103
%105 = OpLoad  %12  %104
%108 = OpAccessChain  %106  %66 %38 %38 %107
%109 = OpLoad  %10  %108
%110 = OpLoad  %5  %90
%111 = OpAccessChain  %106  %66 %38 %38 %110
%112 = OpLoad  %10  %111
%113 = OpLoad  %5  %90
%114 = OpAccessChain  %106  %66 %38 %113 %107
%115 = OpLoad  %10  %114
%116 = OpLoad  %5  %90
%117 = OpLoad  %5  %90
%118 = OpAccessChain  %106  %66 %38 %116 %117
%119 = OpLoad  %10  %118
%120 = OpLoad  %5  %90
%121 = OpIAdd  %5  %120 %45
OpStore %90 %121
%123 = OpAccessChain  %122  %92 %38
OpStore %123 %81
%125 = OpAccessChain  %124  %92 %38 %38
OpStore %125 %83
%126 = OpLoad  %5  %90
%127 = OpAccessChain  %124  %92 %38 %126
OpStore %127 %85
%129 = OpAccessChain  %128  %92 %38 %38 %107
OpStore %129 %86
%130 = OpLoad  %5  %90
%131 = OpAccessChain  %128  %92 %38 %38 %130
OpStore %131 %87
%132 = OpLoad  %5  %90
%133 = OpAccessChain  %128  %92 %38 %132 %107
OpStore %133 %88
%134 = OpLoad  %5  %90
%135 = OpLoad  %5  %90
%136 = OpAccessChain  %128  %92 %38 %134 %135
OpStore %136 %89
OpReturn
OpFunctionEnd
%138 = OpFunction  %2  None %64
%137 = OpLabel
%149 = OpVariable  %91  Function %45
%150 = OpVariable  %151  Function %142
%140 = OpAccessChain  %139  %58 %38
OpBranch %152
%152 = OpLabel
%153 = OpLoad  %5  %149
%154 = OpISub  %5  %153 %45
OpStore %149 %154
%156 = OpAccessChain  %155  %140 %38
%157 = OpLoad  %25  %156
%159 = OpAccessChain  %158  %140 %38 %38
%160 = OpLoad  %24  %159
%161 = OpAccessChain  %100  %140 %38 %38 %38
%162 = OpLoad  %12  %161
%163 = OpLoad  %5  %149
%164 = OpAccessChain  %100  %140 %38 %38 %163
%165 = OpLoad  %12  %164
%166 = OpAccessChain  %106  %140 %38 %38 %38 %107
%167 = OpLoad  %10  %166
%168 = OpLoad  %5  %149
%169 = OpAccessChain  %106  %140 %38 %38 %38 %168
%170 = OpLoad  %10  %169
%171 = OpLoad  %5  %149
%172 = OpAccessChain  %106  %140 %38 %38 %171 %107
%173 = OpLoad  %10  %172
%174 = OpLoad  %5  %149
%175 = OpLoad  %5  %149
%176 = OpAccessChain  %106  %140 %38 %38 %174 %175
%177 = OpLoad  %10  %176
%178 = OpLoad  %5  %149
%179 = OpIAdd  %5  %178 %45
OpStore %149 %179
%181 = OpAccessChain  %180  %150 %38
OpStore %181 %143
%183 = OpAccessChain  %182  %150 %38 %38
OpStore %183 %148
%184 = OpAccessChain  %124  %150 %38 %38 %38
OpStore %184 %83
%185 = OpLoad  %5  %149
%186 = OpAccessChain  %124  %150 %38 %38 %185
OpStore %186 %85
%187 = OpAccessChain  %128  %150 %38 %38 %38 %107
OpStore %187 %86
%188 = OpLoad  %5  %149
%189 = OpAccessChain  %128  %150 %38 %38 %38 %188
OpStore %189 %87
%190 = OpLoad  %5  %149
%191 = OpAccessChain  %128  %150 %38 %38 %190 %107
OpStore %191 %88
%192 = OpLoad  %5  %149
%193 = OpLoad  %5  %149
%194 = OpAccessChain  %128  %150 %38 %38 %192 %193
OpStore %194 %89
OpReturn
OpFunctionEnd
%197 = OpFunction  %10  None %198
%196 = OpFunctionParameter  %27
%195 = OpLabel
OpBranch %199
%199 = OpLabel
%200 = OpLoad  %10  %196
OpReturnValue %200
OpFunctionEnd
%203 = OpFunction  %10  None %204
%202 = OpFunctionParameter  %29
%201 = OpLabel
OpBranch %205
%205 = OpLabel
%206 = OpCompositeExtract  %28  %202 4
%207 = OpCompositeExtract  %10  %206 9
OpReturnValue %207
OpFunctionEnd
%210 = OpFunction  %2  None %211
%209 = OpFunctionParameter  %35
%208 = OpLabel
OpBranch %213
%213 = OpLabel
OpStore %209 %212
OpReturn
OpFunctionEnd
%216 = OpFunction  %2  None %217
%215 = OpFunctionParameter  %37
%214 = OpLabel
OpBranch %221
%221 = OpLabel
OpStore %215 %220
OpReturn
OpFunctionEnd
%228 = OpFunction  %2  None %64
%222 = OpLabel
%238 = OpVariable  %27  Function %233
%239 = OpVariable  %240  Function %241
%225 = OpLoad  %3  %223
%229 = OpAccessChain  %65  %52 %38
%231 = OpAccessChain  %230  %55 %38
%232 = OpAccessChain  %139  %58 %38
OpBranch %242
%242 = OpLabel
%243 = OpLoad  %10  %238
OpStore %238 %67
%244 = OpFunctionCall  %2  %63
%245 = OpFunctionCall  %2  %138
%247 = OpAccessChain  %246  %50 %38
%248 = OpLoad  %8  %247
%251 = OpAccessChain  %249  %50 %250
%252 = OpLoad  %18  %251
%255 = OpAccessChain  %254  %50 %38 %234 %38
%256 = OpLoad  %10  %255
%258 = OpArrayLength  %3  %50 5
%259 = OpISub  %3  %258 %14
%261 = OpAccessChain  %32  %50 %30 %259 %38
%262 = OpLoad  %5  %261
%263 = OpLoad  %23  %231
%264 = OpFunctionCall  %10  %197 %238
%265 = OpConvertFToS  %5  %256
%266 = OpCompositeConstruct  %33  %262 %265 %46 %235 %47
OpStore %239 %266
%267 = OpIAdd  %3  %225 %107
%268 = OpAccessChain  %91  %239 %267
OpStore %268 %236
%269 = OpAccessChain  %91  %239 %225
%270 = OpLoad  %5  %269
%271 = OpFunctionCall  %10  %203 %237
%272 = OpCompositeConstruct  %34  %270 %270 %270 %270
%273 = OpConvertSToF  %31  %272
%274 = OpMatrixTimesVector  %9  %248 %273
%275 = OpCompositeConstruct  %31  %274 %69
OpStore %226 %275
OpReturn
OpFunctionEnd
%278 = OpFunction  %2  None %64
%276 = OpLabel
%279 = OpAccessChain  %230  %55 %38
OpBranch %290
%290 = OpLabel
%291 = OpAccessChain  %254  %50 %38 %107 %14
OpStore %291 %67
%292 = OpAccessChain  %246  %50 %38
OpStore %292 %284
%293 = OpAccessChain  %249  %50 %250
OpStore %293 %287
%294 = OpAccessChain  %32  %50 %30 %107 %38
OpStore %294 %45
OpStore %279 %288
OpStore %277 %289
OpReturn
OpFunctionEnd
%296 = OpFunction  %2  None %64
%295 = OpLabel
%300 = OpVariable  %37  Function %299
OpBranch %301
%301 = OpLabel
%305 = OpLoad  %4  %303
%309 = OpIEqual  %307  %305 %306
%310 = OpAll  %308  %309
OpSelectionMerge %311 None
OpBranchConditional %310 %312 %311
%312 = OpLabel
OpStore %61 %302
OpBranch %311
%311 = OpLabel
OpControlBarrier %14 %14 %313
OpBranch %314
%314 = OpLabel
%315 = OpFunctionCall  %2  %210 %61
%316 = OpFunctionCall  %2  %216 %300
OpReturn
OpFunctionEnd